@page
@model TaskArgument
@{
    ViewData["Title"] = " 图表报告";
    TaskArgument argument = this.Model ?? new TaskArgument();
}

<div class="report-container container-fluid" id="container_index">
    <p class="lead text-muted"> 日志分析工具 图表报告</p>
    <hr />
    <div class="container-fluid justify-content-between">
        <input type="button" class="my-nav-button btn shadow btn-outline-primary" data-target="memory" style="margin:10px" value="内存" />
        <input type="button" class="my-nav-button btn shadow btn-outline-primary" data-target="clientLaunch" style="margin:10px" value="客户端启动" />
        <input type="button" class="my-nav-button btn shadow btn-outline-primary" data-target="serverLaunch" style="margin:10px" value="中间件启动" />
        <input type="button" class="my-nav-button btn shadow btn-outline-primary" data-target="cache" style="margin:10px" value="缓存" />
        <input type="button" class="my-nav-button btn shadow btn-outline-primary" data-target="monitor" style="margin:10px" value="事项" />
        <input type="button" class="my-nav-button btn shadow btn-outline-primary" data-target="performance" style="margin:10px" value="请求" />
        <input type="button" class="my-nav-button btn shadow btn-outline-primary" data-target="sql" style="margin:10px" value="SQL" />
        <input type="button" class="my-nav-button btn shadow btn-outline-primary" data-target="quota" style="margin:10px" value="指标" />
        <input type="button" class="my-nav-button btn shadow btn-outline-primary" data-target="coreservice" style="margin:10px" value="异步服务" />
    </div>
</div>
<div class="report-container container-fluid" id="container_memory" style="display:none;height:500px">
    @{ await Html.RenderPartialAsync("Memory", argument);}
</div>
<div class="report-container container-fluid" id="container_clientLaunch" style="display:none">
    @{ await Html.RenderPartialAsync("ClientLaunch", argument);}
</div>
<div class="report-container container-fluid" id="container_serverLaunch" style="display:none">
    @{ await Html.RenderPartialAsync("ServerLaunch", argument);}
</div>
<div class="report-container container-fluid" id="container_cache" style="display:none">
    @{ await Html.RenderPartialAsync("Cache", argument);}
</div>
<div class="report-container container-fluid" id="container_monitor" style="display:none">
    @{ await Html.RenderPartialAsync("Monitor", argument);}
</div>
<div class="report-container container-fluid" id="container_performance" style="display:none">
    @{ await Html.RenderPartialAsync("Performance", argument);}
</div>
<div class="report-container container-fluid" id="container_sql" style="display:none">
    @{ await Html.RenderPartialAsync("SQL", argument);}
</div>
<div class="report-container container-fluid" id="container_quota" style="display:none">
    @{ await Html.RenderPartialAsync("Quota", argument);}
</div>
<div class="report-container container-fluid" id="container_coreservice" style="display:none">
    @{ await Html.RenderPartialAsync("CoreService", argument);}
</div>